FORMAT: 1A
HOST: http://localhost:5000

# snowy-api

Simple API for allowing accessing snowy data.

## Registration [/register]

### Register a new user [POST]

+ Request (application/json)

        {
            "email": "ordf@lithekod.se",
            "password": "simon123"  
        }

+ Response 201 (application/json)

    + Body
    
            {
                'email': 'ordf@lithekod.se', 
                'language': 'en', 
                'last_name': '', 
                'first_name': ''
            }
            
## Login [/login]

### Login a user [POST]

+ Request (application/json)
    
    + Headers
    
            Authorization: token

    + Body

            {
                "email": "ordf@lithekod.se",
                "password": "simon123"  
            }

+ Response 201 (application/json)

    + Body
    
            {
                'token': 'abcdefgh'
            }

## Log out [/logout]

### Logging a user out [POST]

+ Request (application/json)

    + Headers

            Authorization: token

    +Body
            
            {
                "status": "ok"
            }

+ Response 200 (application/json)
    
    + Body
            {
                "status": "ok"
            }

## Testing verification [/verify]

### Verify a login [GET]

+ Request (application/json)

    + Headers
    
            Authorization: token

+ Response 200 (application/json)

    + Body
            {
                "status": "ok"
            }




## Questions Collection [/questions]

### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }
